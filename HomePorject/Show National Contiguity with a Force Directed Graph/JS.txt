/**********************
 * Development Notes: *
 **********************
 *  Force layout accomplished, 
 *  tooltip accomplished...
      I changed the event.pageX to grabbing the 'left' value of the img tag to minimize the size related shift of tool tip position
 *  Linked to flags generated css in order to clean up the Codepen Sass window (Removed, tried to import the corresponding sass file, and then just put it back.).
 *  Changed the x & y attributes for the <image> version of flags to style left and top for the <img> version
    Refactored out the graphWidth/Height as unnecessary code
    Eliminated Bootstrap as unecessary
 *  I am having trouble appending the flags via the css sprite option. I have tried:
      appending an img to a group
      appending an img tag in lieu of the circle
      appending an image tag to a SVG group tag
      appending img tag to an overlay div and mating them to the underlying nodes
      put circles back to help visualize where flags should be
      flags tied to nodes are now present and placed relative to the nodes but are below of the svg 
      removing position: absolute from #overlay positioned the flags over the circles, off by several px each way
      adjusted flags placement and tooltip placement, but overlay breaks on resizing
      made the body's min-height 1400 to prevent the toggling of the tool tip to shift the flags
      Eliminated the circles, need to fix fragility of flag positioning
      Hard-coded the parent div height, width, and margin and positioned the children absolute
      Removed absolute postion from svg. Flags are married to lines and do not appear to be shifting with resizing!
      
      Acknowledgements:
      
      * Force layout https://github.com/d3/d3/wiki/Force-Layout
      * Force Directed Graph https://bl.ocks.org/mbostock/4062045
      * Force Directed Graph https://bl.ocks.org/sathomas/11550728
      * Spritesheet positioning trail/error++ & http://stackoverflow.com/questions/23961599/css-sprites-d3-js
      * CSS background http://lea.verou.me/css3patterns/#argyle
*/


var url = "https://raw.githubusercontent.com/DealPete/forceDirected/master/countries.json";

$.getJSON(url, function(data) {
  var dater = data,
      nodes = data.nodes,
      links = data.links,
      margin = {
        top: 120,
        right: 40,
        bottom: 100,
        left: 80
      },
      chartHeight = 800,
      chartWidth = 1000,
      graphHeight = chartHeight - margin.bottom - margin.top,
      graphWidth = chartWidth - margin.left - margin.right,
      //If you want to see an angular style {{data | json}} block add pre back to html
      json = d3.select('pre').text(JSON.stringify(dater, undefined, 4));
  
  function findCenter(element) {
    var center = (+(d3.select('#myChart').attr('width')) / 2);
    var elementCenter = (element.getBBox().width) / 2;
    return center - elementCenter;
  }

  
  var svg = d3.select('#myChart')
    .attr('width', chartWidth)
    .attr('height', chartHeight);
  
  var force = d3.layout.force()
    .nodes(nodes)
    .links(links)
    .size([chartWidth, chartHeight])
    .linkStrength(0.1)
    .friction(0.9)
    .linkDistance(20)
    .charge(-30)
    .gravity(0.05)
    .theta(0.8)
    .alpha(0.1)
    .start();
  
  var link = svg.selectAll(".link")
      .data(links)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke-width", function(d) { return Math.sqrt(d.value); });
  
  var flags = d3.select('#overlay')
    .selectAll('.node')
    .data(nodes)
  .enter().append('img')
    .attr('class', function(d) {return 'flag flag-' + d.code;})
    .on('mouseover', function(d) {        
        var xPos = d3.select(this).style('left');
        var yPos = event.pageY - 1020;
        var tooltip = d3.select('#tooltip')
          .style('left', (parseInt(xPos, 10) -92) + 'px' )
          .style('top', yPos + 'px')
          .attr('class', 'tips');        
        
          d3.select('#country').text(d.country);
      })
      .on('mouseout', function() {
        d3.select('#tooltip').attr('class', 'hidden');
      })
      .call(force.drag);
  
  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    flags.style("left", function(d) { return d.x + 'px'; })
        .style("top", function(d) { return (d.y - 3)  + 'px'; });
  });
  
  var chartTitle = d3.select('#myChart')
    .append('text')
    .text('Force Directed Graph of State Contiguity')
    .attr('font-size', '40px')
    .attr('font-family', 'Helvetica')
    .attr('id', 'chartTitle');
  
  chartTitle.attr('x', findCenter(document.getElementById('chartTitle'))).attr('y', 42);
  
});